version: "3.7"
services:
  mongodb-server:
    image: mongo:latest
    volumes:
      - 'mongodb-server-volume:/data/db'
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      go-ref-api:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      go-ref-api:

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    restart: always
    networks:
      go-ref-api:
    
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      go-ref-api:

  maildev:
    image: maildev/maildev:1.1.0
    command: bin/maildev --web 1080 --smtp 1025
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      go-ref-api:

  api-server:
    image: docker-app-test:latest
    ports:
      - '8040:8040'
    environment:
      MONGO_SERVER_HOST: mongodb-server
      MONGO_SERVER_PORT: 27017
      STORAGE_MEMORY: 'false'
      EMAIL_CONSUMERS: 1
      KAFKA_SERVER_HOST: kafka
      KAFKA_SERVER_PORT: 9092
      EMAIL_SERVER_HOST: maildev
      EMAIL_SERVER_PORT: 1025
      EMAIL_SERVER_STARTTLS: 'false'
      EMAIL_SERVER_USERNAME: user
      EMAIL_SERVER_PASSWORD: mdp
    depends_on:
      - kafka
      - mongodb-server
    networks:
      go-ref-api:

volumes:
  mongodb-server-volume:

networks:
  go-ref-api:  
    name: "network-go-ref-api"